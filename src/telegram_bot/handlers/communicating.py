import re

from aiogram import F, Router, Bot
from aiogram.exceptions import AiogramError
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.base import StorageKey
from aiogram.fsm.storage.redis import RedisStorage
from aiogram.types import Message

from src.init_data import FORBIDDEN_TEXTS, FORBIDDEN_RE
from src.telegram_bot.states.user import UserState

communicating_router = Router(name="main")


def check_message(message_text: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –Ω–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞, —Å–∏–º–≤–æ–ª—ã –∏ —Ç.–¥.
    :return:
    """
    assert isinstance(message_text, str)

    for forbidden_text in FORBIDDEN_TEXTS:
        if forbidden_text in message_text:
            return False
    for forbidden_re in FORBIDDEN_RE:
        if re.search(forbidden_re, message_text):
            return False
    return True


async def up_storage_ttl_users(my_state: FSMContext, my_data: dict, interlocutor_storage_key: StorageKey,
                               interlocutor_storage_data: dict, storage: RedisStorage):
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä —É–¥–∞–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await my_state.set_state(UserState.communicating)
    await my_state.set_data(my_data)

    # –¢–∞–∫ –∂–µ –µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
    await storage.set_state(interlocutor_storage_key, UserState.communicating)
    await storage.set_data(interlocutor_storage_key, interlocutor_storage_data)


async def get_interlocutor_storage(bot: Bot, interlocutor_telegram_id: int, storage: RedisStorage):
    interlocutor_storage_key = StorageKey(bot.id, interlocutor_telegram_id, interlocutor_telegram_id)
    interlocutor_storage_data = await storage.get_data(interlocutor_storage_key)
    return interlocutor_storage_key, interlocutor_storage_data


@communicating_router.message(UserState.communicating, F.content_type.in_({"text", "sticker"}))
async def communicating_handler(message: Message, state: FSMContext, storage: RedisStorage):
    user_data = await state.get_data()

    interlocutor_telegram_id: int | None = user_data.get("interlocutor_telegram_id")
    if interlocutor_telegram_id is None:
        await state.clear()
        return await message.answer("‚ùï –ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –≤–∞—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –µ—â–µ —Ä–∞–∑...")

    interlocutor_key, interlocutor_data = await get_interlocutor_storage(message.bot, interlocutor_telegram_id, storage)

    # –ï—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ –∫–∞–∫–æ–π —Ç–æ –ø—Ä–∏—á–∏–Ω–µ —É–∂–µ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –¥–∏–∞–ª–æ–≥–µ —Å —ç—Ç–∏–º –ø–æ–ª—å–æ–≤–∞—Ç–µ–ª–µ–º, —Ç–æ –∑–∞–≤–µ—Ä—à–∞–µ–º —ç—Ç–æ –æ–±—â–µ–Ω–∏–µ
    if interlocutor_data["interlocutor_telegram_id"] != message.from_user.id:
        await state.clear()
        return await message.answer("‚ùï –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ —É–∂–µ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç —Å –≤–∞–º–∏ –≤ –¥–∏–∞–ª–æ–≥–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –µ—â–µ —Ä–∞–∑...")

    await up_storage_ttl_users(state, user_data, interlocutor_key, interlocutor_data, storage)

    if message.text and not check_message(message.text):
        return await message.reply("‚ùï –í –≤–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞, –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å:\n"
                                   "- –°—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ—Å—É—Ä—ã\n"
                                   "- –Æ–∑–µ—Ä–Ω–µ–π–º—ã")

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É –∫–æ–ø–∏—é —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        await message.bot.copy_message(interlocutor_telegram_id, message.from_user.id, message.message_id)

        # –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–æ—Ç–∞: –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª—è—Ç—å —Ä–µ–∞–∫—Ü–∏–µ–π —é–∑–µ—Ä–∞ —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
        # await message.bot.set_message_reaction(message.chat.id, message.message_id, [ReactionTypeEmoji(emoji="üïä")])
    except AiogramError as _ex:
        await message.reply("‚ùï –í–∞—à —Ç–µ–∫—Å—Ç –Ω–µ –±—ã–ª –¥–æ—Å—Ç–∞–≤–ª–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –µ—â—ë —Ä–∞–∑...")
